{"ast":null,"code":"var _jsxFileName = \"D:\\\\Visual Studio Code Projects\\\\ReactCourse\\\\my-app\\\\react-complete-guide\\\\src\\\\components\\\\Expenses\\\\Expenses.js\",\n    _s = $RefreshSig$();\n\nimport { React, useState } from \"react\";\nimport Card from \"../UI/Card\";\nimport \"./Expenses.css\";\nimport ExpensesFilter from \"./ExpensesFilter\";\nimport ExpensesList from \"./ExpensesList\";\nimport ExpensesChart from \"./ExpensesChart\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Expenses = props => {\n  _s();\n\n  const expenses = props.items;\n  const [filterYear, setFilterYear] = useState(\"2021\");\n\n  const filterYearHandler = year => {\n    setFilterYear(year);\n    console.log(year);\n  };\n\n  const filteredExpenses = expenses.filter(expense => expense.date.getFullYear().toString() === filterYear);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      className: \"expenses\",\n      children: [/*#__PURE__*/_jsxDEV(ExpensesFilter, {\n        selected: filterYear,\n        onFilterYear: filterYearHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ExpensesChart, {\n        e: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ExpensesList, {\n        items: filteredExpenses\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Expenses, \"xH2VmAya77TjpauPVdbzcYcf4sg=\");\n\n_c = Expenses;\nexport default Expenses;\n\nvar _c;\n\n$RefreshReg$(_c, \"Expenses\");","map":{"version":3,"sources":["D:/Visual Studio Code Projects/ReactCourse/my-app/react-complete-guide/src/components/Expenses/Expenses.js"],"names":["React","useState","Card","ExpensesFilter","ExpensesList","ExpensesChart","Expenses","props","expenses","items","filterYear","setFilterYear","filterYearHandler","year","console","log","filteredExpenses","filter","expense","date","getFullYear","toString"],"mappings":";;;AAAA,SAASA,KAAT,EAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,IAAP,MAAiB,YAAjB;AACA,OAAO,gBAAP;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,OAAOC,aAAP,MAA0B,iBAA1B;;;AAEA,MAAMC,QAAQ,GAAIC,KAAD,IAAW;AAAA;;AAC1B,QAAMC,QAAQ,GAAGD,KAAK,CAACE,KAAvB;AAEA,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BV,QAAQ,CAAC,MAAD,CAA5C;;AAEA,QAAMW,iBAAiB,GAAIC,IAAD,IAAU;AAClCF,IAAAA,aAAa,CAACE,IAAD,CAAb;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AACD,GAHD;;AAKA,QAAMG,gBAAgB,GAAGR,QAAQ,CAACS,MAAT,CACtBC,OAAD,IAAaA,OAAO,CAACC,IAAR,CAAaC,WAAb,GAA2BC,QAA3B,OAA0CX,UADhC,CAAzB;AAMA,sBACE;AAAA,2BACE,QAAC,IAAD;AAAM,MAAA,SAAS,EAAC,UAAhB;AAAA,8BACE,QAAC,cAAD;AACE,QAAA,QAAQ,EAAEA,UADZ;AAEE,QAAA,YAAY,EAAEE;AAFhB;AAAA;AAAA;AAAA;AAAA,cADF,eAKE,QAAC,aAAD;AAAe,QAAA,CAAC;AAAhB;AAAA;AAAA;AAAA;AAAA,cALF,eAME,QAAC,YAAD;AAAc,QAAA,KAAK,EAAEI;AAArB;AAAA;AAAA;AAAA;AAAA,cANF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAsBD,CAtCD;;GAAMV,Q;;KAAAA,Q;AAuCN,eAAeA,QAAf","sourcesContent":["import { React, useState } from \"react\";\r\nimport Card from \"../UI/Card\";\r\nimport \"./Expenses.css\";\r\nimport ExpensesFilter from \"./ExpensesFilter\";\r\nimport ExpensesList from \"./ExpensesList\";\r\nimport ExpensesChart from \"./ExpensesChart\";\r\n\r\nconst Expenses = (props) => {\r\n  const expenses = props.items;\r\n\r\n  const [filterYear, setFilterYear] = useState(\"2021\");\r\n\r\n  const filterYearHandler = (year) => {\r\n    setFilterYear(year);\r\n    console.log(year);\r\n  };\r\n\r\n  const filteredExpenses = expenses.filter(\r\n    (expense) => expense.date.getFullYear().toString() === filterYear\r\n  );\r\n\r\n  \r\n\r\n  return (\r\n    <div>\r\n      <Card className=\"expenses\">\r\n        <ExpensesFilter\r\n          selected={filterYear}\r\n          onFilterYear={filterYearHandler}\r\n        />\r\n        <ExpensesChart e/>\r\n        <ExpensesList items={filteredExpenses}/>\r\n        {/* {filteredExpenses.length === 0 && <p>No expenses found.</p>}\r\n        {filteredExpenses.length > 0 &&\r\n          filteredExpenses.map((expense) => (\r\n            <ExpenseItem\r\n              key={expense.id}\r\n              title={expense.title}\r\n              amount={expense.amount}\r\n              date={expense.date}\r\n            />\r\n          ))} */}\r\n      </Card>\r\n    </div>\r\n  );\r\n};\r\nexport default Expenses;\r\n"]},"metadata":{},"sourceType":"module"}